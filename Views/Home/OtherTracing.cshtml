@using System.Web.Optimization

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
    <!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tracing demo</title>

    <!--  Bootstrap styles -->
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <!-- Styles for the jQquery File Upload Plugin in Basic Plus UI style -->
    @Styles.Render("~/backload/blueimp/bootstrap/BasicPlusUI/css")

    <!-- The main application styles -->
    <link href="~/Content/demo.styles.css" rel="stylesheet" />
</head>

<body>
    <div class="container">
        <h1>Tracing</h1>
        <h2 class="lead">How to show trace messages</h2>
        <br>

        <div class="container">
            <blockquote>
                <p>
                    This demo shows how to display Backload's trace output messages. This can be very helpful when some kind of exceptions occur, local or remote.
                    To enable tracing support, you need only need to add a 'system.diagnostics' element to the Web.config (see below). Trace output messages can 
                    be accessed at http://[your web app]/trace.axd. (Note: From release 2.2+ on you also need to enable tracing support in Web.Backload.config: 
                    &lt;backload tracing="true" [...] &gt;). In the trace output window, click "View details" on the Ajax request to the controller. <br />
                    <strong>Note: To make this demo work, you must enable tracing support like shown below!</strong>
                </p>
            </blockquote>
            <br>

            <!-- The file upload form used as target for the file upload widget -->
            <form id="fileupload" action="/Backload/FileHandler" method="POST" enctype="multipart/form-data">
                <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
                <div class="row fileupload-buttonbar">
                    <div class="col-lg-7">
                        <!-- The fileinput-button span is used to style the file input field as button -->
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Add files...</span>
                            <input type="file" name="files[]" multiple>
                        </span>
                        <button type="submit" class="btn btn-primary start">
                            <i class="glyphicon glyphicon-upload"></i>
                            <span>Start upload</span>
                        </button>
                        <button type="reset" class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel upload</span>
                        </button>
                        <button type="button" class="btn btn-danger delete">
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Delete</span>
                        </button>
                        <input type="checkbox" class="toggle">
                        <!-- The global file processing state -->
                        <span class="fileupload-process"></span>
                    </div>
                    <!-- The global progress state -->
                    <div class="col-lg-5 fileupload-progress fade">
                        <!-- The global progress bar -->
                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                            <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                        </div>
                        <!-- The extended global progress state -->
                        <div class="progress-extended">&nbsp;</div>
                    </div>
                </div>
                <!-- The table listing the files available for upload/download -->
                <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
            </form>
        </div>

        <!-- The template to display files available for upload -->
        <script id="template-upload" type="text/x-tmpl">
            {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-upload fade">
                <td>
                    <span class="preview"></span>
                </td>
                <td>
                    <p class="name">{%=file.name%}</p>
                    <strong class="error text-danger"></strong>
                </td>
                <td>
                    <p class="size">Processing...</p>
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
                </td>
                <td>
                    {% if (!i && !o.options.autoUpload) { %}
                    <button class="btn btn-primary start" disabled>
                        <i class="glyphicon glyphicon-upload"></i>
                        <span>Start</span>
                    </button>
                    {% } %}
                    {% if (!i) { %}
                    <button class="btn btn-warning cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel</span>
                    </button>
                    {% } %}
                </td>
            </tr>
            {% } %}
        </script>

        <!-- The template to display files available for download -->
        <script id="template-download" type="text/x-tmpl">
            {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-download fade">
                <td>
                    <span class="preview">
                        {% if (file.thumbnailUrl) { %}
                        <a href="{%=file.url%}" title="{%=file.extra.originalName%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                        {% } %}
                    </span>
                </td>
                <td>
                    <p class="name">
                        {% if (file.url) { %}
                        <a href="{%=file.url%}" title="{%=file.extra.originalName%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.extra.originalName%}</a>
                        {% } else { %}
                        <span>{%=file.extra.originalName%}</span>
                        {% } %}
                    </p>
                    {% if (file.error) { %}
                    <div><span class="label label-danger">Error</span> {%=file.error%}</div>
                    {% } %}
                </td>
                <td>
                    <span class="size">{%=o.formatFileSize(file.size)%}</span>
                </td>
                <td>
                    {% if (file.deleteUrl) { %}
                    <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}" {% if (file.deletewithcredentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                        <i class="glyphicon glyphicon-trash"></i>
                        <span>Delete</span>
                    </button>
                    <input type="checkbox" name="delete" value="1" class="toggle">
                    {% } else { %}
                    <button class="btn btn-warning cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel</span>
                    </button>
                    {% } %}
                </td>
            </tr>
            {% } %}
        </script>

        <!-- The blueimp Gallery widget -->
        <div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls" data-filter=":even">
            <div class="slides"></div>
            <h3 class="title"></h3>
            <a class="prev">‹</a>
            <a class="next">›</a>
            <a class="close">×</a>
            <a class="play-pause"></a>
            <ol class="indicator"></ol>
        </div>
        <br>


        <!-- How to enable tracing support start -->
        <h2 class="lead">Add tracing support</h2>

        <p>In Web.config add the &lt;system.diagnostics /&gt; element and the &lt;trace /&gt; element:</p>
        <pre>
&lt;system.diagnostics&gt; 
    &lt;trace autoflush="true" /&gt;
    &lt;sources&gt; 
        &lt;!--TraceSource name must be "Backload". Valid levels are: Off, Critical, Warning, Information, Verbose. --&gt; 
        &lt;source name="Backload" switchvalue="Verbose"&gt;
        &lt;listeners&gt; 
            &lt;!--ASP.NET Trace listener. Trace output can be accessed at url http://[webapp root]/trace.axd--&gt; 
            &lt;add name="WebPageTraceListener" type="System.Web.WebPageTraceListener, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" /&gt;
        &lt;/listeners&gt; 
        &lt;/source&gt; 
    &lt;/sources&gt; 
&lt;/system.diagnostics&gt; 
              
&lt;system.web&gt;
  &lt;trace enabled="true" mostrecent="true" requestlimit="50" localonly="false" /&gt;
  [...]
&lt;/system.web&gt;
        </pre>
        <p>&nbsp;</p>

        <p>In Web.Backload.config enable tracing (release 2.2+ only):</p>
        <pre>
&lt;backload tracing="true" [...]&gt;
  [more settings]
&lt;/backload&gt;
        </pre>
        <p>&nbsp;</p>
        <!-- How to enable tracing support end -->


        <!-- Trace info start -->
        <a href="/trace.axd" target="traceout">Show trace</a>&nbsp;|&nbsp;<a href="about:blank" onclick="javascript: document.getElementById('traceout').style.height = '0px';" target="traceout">Hide trace</a>&nbsp;|&nbsp;<a href="javascript:void(0);" onclick="javascript: document.getElementById('traceout').src = '/trace.axd?ts=' + Date.now();" target="traceout">Refresh trace</a>&nbsp;|&nbsp;<a href="/trace.axd?clear=1" target="traceout">Clear trace</a>&nbsp;|&nbsp;<a href="/trace.axd" target="_blank">Standalone</a>
        <span style="color:silver; padding-left:20px; display:inline-block">Click "View details" for the controller request to show Backload's internal trace output. (You may need to refresh).</span><br />
        <iframe href="about:blank" style="width:100%; height:0px; border: 1px solid silver; background-color: lightgray; overflow:hidden;" id="traceout" name="traceout" onload="javascript: this.style.height = this.contentDocument.body.scrollHeight + 10 + 'px';"></iframe>
        <!-- Trace info end -->

    </div>

    <!-- jQuery script -->
    <script src="~/Scripts/jquery-2.1.4.min.js"></script>

    <!-- Bootstrap script -->
    <script src="~/Scripts/bootstrap.min.js"></script>

    <!-- Scripts for the jQquery File Upload Plugin in Basic Plus UI style* -->
    @Scripts.Render("~/backload/blueimp/bootstrap/BasicPlusUI")

    <!-- The demo application script -->
    <script src="~/Scripts/demos.blueimp.basicplusui.js"></script>
</body>
</html>